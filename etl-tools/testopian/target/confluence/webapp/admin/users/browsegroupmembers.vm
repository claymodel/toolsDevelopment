 <html>
    <head>
        <title>$action.getText("browse.groupmembers.title"): $generalUtil.htmlEncode($action.decodedMembersOfGroupTerm)</title>
        #requireResource("confluence.web.resources:ajs")
        #requireResource("confluence.web.resources:aui-forms")
        #requireResource("confluence.admin.user:browsegroupmembers")
    </head>
    <body>
        #parse ("/template/includes/actionerrors.vm")

        <fieldset class="hidden parameters">
            <input type="hidden" id="i18n-add-members" value="$action.getText('add.members')">
            <input type="hidden" id="i18n-cancel-add" value="$action.getText('cancel.name')">
        </fieldset>
        
        <div>
        <a href="browsegroups.action" class="texticon groups">$action.getText('manage.groups')</a>
        #if($canEditGroup)
        <a href="#" id="switch-button" class="texticon add-user">$action.getText('add.members')</a>
        #end
        </div>

        #if(!$canEditGroup)
        <div class="noteMessage topBottomMargin">
            $action.getText('member.update.system.admin.required')
        </div>
        #end

        <div id="add-members-section">
            <form name="addMembersForm" method="POST" action="adduserstogroup.action" class="aui">
                #form_xsrfToken()
                <h2>$generalUtil.htmlEncode($action.decodedMembersOfGroupTerm)</h2>
                <div class="field-group">
                    #bodytag( "TextField" "label='add.members'" "id=usersToAdd" "name='usersToAdd'" "theme='aui'" "template='text-inline.vm'" )
                        #param ("tabindex" "2")
                        #param ("size" "60")
                    #end

                    ## User Picker properties
                    #set ($url = "$req.contextPath/spaces/openuserpicker.action?key=$!key&startIndex=0&actionName=$!actionName&existingGroups=$!value")
                    #set ($windowName = "EntitiesPicker")
                    #set ($windowProperties = "status=yes,resizable=yes,top=100,left=200,width=700,height=680,scrollbars=yes")
                    #bodytag ("Component" "theme='custom'" "template='popup-link.vm'")
                        #param ("url" "$url")
                        #param ("windowName" "$windowName")
                        #param ("windowProperties" "$windowProperties")
                        #param ("imgSrc" "$staticResourceUrlPrefix/images/icons/srch_16.gif")
                        #param ("imgTitle" "$action.getText('userpicker.name')")
                        #param ("onPopupSubmit" "setPickerField")
                    #end
                    <span class="description">$action.getText('add.members.desc')</span>
                </div>

                #tag( "Hidden" "name='membersOfGroupTerm'" "value=decodedMembersOfGroupTerm" )
                #bodytag( "Submit" "theme='aui'" )
                    #param ("editMode" "true")
                    #param ("submitValue" "$action.getText('add.word')")
                    #param ("cancelValue" "$action.getText('cancel.name')")
                #end
            </form>
        </div>


        <div id="list-members-section" class="pageSection">
        #set ($pager = $action.paginationSupport.items)
        #set ($pagination = $action.paginationSupport)

        #set ($users = $pagination.page)

        #set ($filter = "")

        #if ($emailPattern)
            #set ($filter = "emailPattern=$emailPattern")
        #elseif ($groupName)
            #set ($filter = "groupName=$groupName")
        #end

        #if ($users)

            #if( $users.isEmpty())
                $action.getText("there.are.no.users")
            #else
                #set ($paginationUrl="?membersOfGroupTerm=$!{generalUtil.urlEncode($membersOfGroupTerm)}&")

                #if ($action.paginationSupport.items)
                    #entityPagination($action.paginationSupport $paginationUrl)
                #end

            <table id="group-members-table" class="aui user-table">
                <thead>
                    <tr>
                        <th width="30%">$action.getText("user.name")</th>
                        <th width="40%">$action.getText("username.name")</th>
                        <th width="29%">$action.getText("email.name.withdash")</th>
                        <th width="1%"></th>
                    </tr>
                </thead>
                <tbody>
                #foreach ($user in $action.paginationSupport.page.iterator())
                    #set($htmlSafeEmail = $!generalUtil.htmlEncode($user.email))
                    #set($htmlSafeUsername = $!generalUtil.htmlEncode($user.name))
                    #set($userProfileLink = "viewuser.action?username=$!generalUtil.doubleUrlEncode($user.name)")
                    #set($userDisabled = $userAccessor.isDeactivated($user))
                    <tr id="user-row-$htmlSafeUsername" #if ($userDisabled)class="inactive"#end>
                        <td>
                            <a href="$userProfileLink" class="icon icon-user confluence-userlink" data-username="$htmlSafeUsername">#if ($userDisabled)$action.getText("inactive.user"):#else$action.getText("active.user"):#end</a>
                            <a href="$userProfileLink" class="confluence-userlink" data-username="$htmlSafeUsername">$!generalUtil.htmlEncode($user.fullName)</a> #if ($userDisabled)<em>$i18n.getText("deactivated.users.label")</em>#end
                        </td>
                        <td>$htmlSafeUsername</td>
                        <td>#if ($user.email)<a href="mailto:$htmlSafeEmail">$htmlSafeEmail</a>#end</td>
                        <td align="center">
                            #if($canEditGroup)
                                <a href="removeuserfromgroup.action?#url_xsrfToken()&membersOfGroupTerm=$!generalUtil.doubleUrlEncode($action.decodedMembersOfGroupTerm)&username=$!generalUtil.doubleUrlEncode($user.name)" class="icon remove-user" title="$i18n.getText('remove.user.from.group')">$i18n.getText('remove.user.from.group')</a>
                            #end
                        </td>
                    </tr>
                #end
                </tbody>
            </table>
                #if ($action.paginationSupport.items)
                    #entityPagination($action.paginationSupport $paginationUrl)
                #end
            #end

        #end
        </div>

#parse("/breadcrumbs.vm")

    </body>
</html>