				Atlassian JIRA SOAP Client demonstration
				----------------------------------------

This project will help you get started writing a SOAP or XML-RPC client
for JIRA.  There are sample clients in Python (src/python) and Java
(src/java). Out the box, these samples will run against our public JIRA
instance (http://jira.atlassian.com). Once you've verified this works,
you can modify them to use your own JIRA installation.

Installation
------------

The python clients need no installation - just make sure you have the
'soappy' Python library, run the scripts in src/python/.

For the Java client:

 - Install Maven 1.x from http://maven.apache.org
 - Run:

maven plugin:download -Dmaven.repo.remote=http://repository.atlassian.com,http://www.ibiblio.org/maven -DartifactId=maven-axis-plugin -DgroupId=atlassian -Dversion=0.7AXIS1.3

   This downloads and installs the Maven Axis plugin (modified to use
   Axis RC3 instead of RC2, to avoid a bug in stub generation - you can check
   http://maven-plugins.sourceforge.net/maven-axis-plugin/dependencies.html
   to see if the official maven-axis-plugin uses RC3 or higher, and if
   so, use their plugin).

 - Run 'maven'
 - Run 'java -jar release/jira-soapclient-*.jar'.  This will
   generate a test issue in http://jira.atlassian.com/browse/TST


Customization
-------------

To run against your own JIRA installation, you need to obtain the WSDL
file generated by it:

 - Ensure SOAP is enabled in your JIRA installation, by following the
   instructions at
http://confluence.atlassian.com/display/JIRA/Creating+a+SOAP+Client+Tutorial

 - Edit project.properties and change the URL to point to your JIRA installation.

 - Run 'maven fetch-wsdl', which downloads the v2 WSDL and copies it to
   src/wsdl/

 - Edit src/java/com/atlassian/jira_soapclient/ClientConstants.java, and
   change the details (URL, login details, project key, component and
   version IDs).

 - Edit src/java/com/atlassian/jira_soapclient/SOAPClient.java, delete
   the imports (which will be referencing the old WSDL-derived classes)
   and add new correct imports for the new WSDL (an autocompleting IDE
   helps here - try 'maven idea' or 'maven eclipse').

 - Run 'maven' to generate the jar


Compile problems?
-----------------

If you get compilation errors like:

/home/jturner/dloads/jira-soapclient-1.3/src/java/com/atlassian/jira_soapclient/SOAPClient.java:28: cannot find symbol
symbol  : class JiraSoapService
location: class com.atlassian.jira_soapclient.SOAPClient
        JiraSoapService jiraSoapService = jiraSoapServiceGetter.getJirasoapserviceV2();

This is probably because the auto-generated stub classes are generated
in the wrong package, eg. from earlier 'maven' output::

...
Generating /home/jturner/dloads/jira-soapclient-1.3/target/axis/src/localhost/rpc/soap/jirasoapservice_v2/JiraSoapServiceServiceTestCase.java
Generating /home/jturner/dloads/jira-soapclient-1.3/target/axis/src/localhost/rpc/soap/jirasoapservice_v2/deploy.wsdd
Generating /home/jturner/dloads/jira-soapclient-1.3/target/axis/src/localhost/rpc/soap/jirasoapservice_v2/undeploy.wsdd


To fix this, examine the .wsdl file in src/wsdl/ and note the
targetNamespace:

<wsdl:definitions targetNamespace="http://localhost:8080//rpc/soap/jirasoapservice-v2"

and in project.properties, map this URL to the _soapclient namespace:

maven.wsdl2java.namespaceMappings=${jira_soapclient.jiraurl}/rpc/soap/jirasoapservice-v2=_soapclient,\
http://atlassian01.contegix.com:10083/rpc/soap/jirasoapservice-v2=_soapclient,\
http://localhost:8080//rpc/soap/jirasoapservice-v2=_soapclient

Then rerun maven. You should see the stubs being generated in the
correct package:

Generating /home/jturner/dloads/jira-soapclient-1.3/target/axis/src/_soapclient/JiraSoapServiceServiceTestCase.java
Generating /home/jturner/dloads/jira-soapclient-1.3/target/axis/src/_soapclient/deploy.wsdd
Generating /home/jturner/dloads/jira-soapclient-1.3/target/axis/src/_soapclient/undeploy.wsdd

followed by successful compilation:



Modifying the code
------------------

Of course, you will want to customize SOAPClient.java to do something
useful. When setting up your working environment, remember that you need
to generate SOAP stub .java files, by running 'maven axis:compile'.
Java stubs will be generated in /target/axis/src/.  You need to add this
directory to your source path, in order for SOAPClient.java to compile.


For more info
-------------

See the tutorial on creating a SOAP client:

http://confluence.atlassian.com/display/JIRA/Creating+a+SOAP+Client

Mail jira-support@atlassian.com if you have any questions.

-- 
 $Revision: 1.6 $ $Date: 2005/05/19 23:38:56 $
